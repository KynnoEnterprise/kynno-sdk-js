/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.exportSymbol('proto.kynno.incentives.v1.CancelIncentiveProposal', null, global);
goog.exportSymbol('proto.kynno.incentives.v1.GasMeter', null, global);
goog.exportSymbol('proto.kynno.incentives.v1.Incentive', null, global);
goog.exportSymbol('proto.kynno.incentives.v1.RegisterIncentiveProposal', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kynno.incentives.v1.Incentive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kynno.incentives.v1.Incentive.repeatedFields_, null);
};
goog.inherits(proto.kynno.incentives.v1.Incentive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kynno.incentives.v1.Incentive.displayName = 'proto.kynno.incentives.v1.Incentive';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kynno.incentives.v1.Incentive.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kynno.incentives.v1.Incentive.prototype.toObject = function(opt_includeInstance) {
  return proto.kynno.incentives.v1.Incentive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kynno.incentives.v1.Incentive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.Incentive.toObject = function(includeInstance, msg) {
  var f, obj = {
    contract: jspb.Message.getFieldWithDefault(msg, 1, ""),
    allocationsList: jspb.Message.toObjectList(msg.getAllocationsList(),
    cosmos_base_v1beta1_coin_pb.DecCoin.toObject, includeInstance),
    epochs: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    totalGas: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kynno.incentives.v1.Incentive}
 */
proto.kynno.incentives.v1.Incentive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kynno.incentives.v1.Incentive;
  return proto.kynno.incentives.v1.Incentive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kynno.incentives.v1.Incentive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kynno.incentives.v1.Incentive}
 */
proto.kynno.incentives.v1.Incentive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.DecCoin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addAllocations(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEpochs(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalGas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kynno.incentives.v1.Incentive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kynno.incentives.v1.Incentive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kynno.incentives.v1.Incentive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.Incentive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAllocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getEpochs();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTotalGas();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional string contract = 1;
 * @return {string}
 */
proto.kynno.incentives.v1.Incentive.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.Incentive.prototype.setContract = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin allocations = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.kynno.incentives.v1.Incentive.prototype.getAllocationsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.DecCoin, 2));
};


/** @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value */
proto.kynno.incentives.v1.Incentive.prototype.setAllocationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.kynno.incentives.v1.Incentive.prototype.addAllocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


proto.kynno.incentives.v1.Incentive.prototype.clearAllocationsList = function() {
  this.setAllocationsList([]);
};


/**
 * optional uint32 epochs = 3;
 * @return {number}
 */
proto.kynno.incentives.v1.Incentive.prototype.getEpochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.kynno.incentives.v1.Incentive.prototype.setEpochs = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kynno.incentives.v1.Incentive.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.kynno.incentives.v1.Incentive.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.kynno.incentives.v1.Incentive.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.kynno.incentives.v1.Incentive.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 total_gas = 5;
 * @return {number}
 */
proto.kynno.incentives.v1.Incentive.prototype.getTotalGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.kynno.incentives.v1.Incentive.prototype.setTotalGas = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kynno.incentives.v1.GasMeter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kynno.incentives.v1.GasMeter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kynno.incentives.v1.GasMeter.displayName = 'proto.kynno.incentives.v1.GasMeter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kynno.incentives.v1.GasMeter.prototype.toObject = function(opt_includeInstance) {
  return proto.kynno.incentives.v1.GasMeter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kynno.incentives.v1.GasMeter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.GasMeter.toObject = function(includeInstance, msg) {
  var f, obj = {
    contract: jspb.Message.getFieldWithDefault(msg, 1, ""),
    participant: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cumulativeGas: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kynno.incentives.v1.GasMeter}
 */
proto.kynno.incentives.v1.GasMeter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kynno.incentives.v1.GasMeter;
  return proto.kynno.incentives.v1.GasMeter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kynno.incentives.v1.GasMeter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kynno.incentives.v1.GasMeter}
 */
proto.kynno.incentives.v1.GasMeter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParticipant(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCumulativeGas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kynno.incentives.v1.GasMeter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kynno.incentives.v1.GasMeter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kynno.incentives.v1.GasMeter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.GasMeter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParticipant();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCumulativeGas();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string contract = 1;
 * @return {string}
 */
proto.kynno.incentives.v1.GasMeter.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.GasMeter.prototype.setContract = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string participant = 2;
 * @return {string}
 */
proto.kynno.incentives.v1.GasMeter.prototype.getParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.GasMeter.prototype.setParticipant = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 cumulative_gas = 3;
 * @return {number}
 */
proto.kynno.incentives.v1.GasMeter.prototype.getCumulativeGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.kynno.incentives.v1.GasMeter.prototype.setCumulativeGas = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kynno.incentives.v1.RegisterIncentiveProposal.repeatedFields_, null);
};
goog.inherits(proto.kynno.incentives.v1.RegisterIncentiveProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kynno.incentives.v1.RegisterIncentiveProposal.displayName = 'proto.kynno.incentives.v1.RegisterIncentiveProposal';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.kynno.incentives.v1.RegisterIncentiveProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kynno.incentives.v1.RegisterIncentiveProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contract: jspb.Message.getFieldWithDefault(msg, 3, ""),
    allocationsList: jspb.Message.toObjectList(msg.getAllocationsList(),
    cosmos_base_v1beta1_coin_pb.DecCoin.toObject, includeInstance),
    epochs: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kynno.incentives.v1.RegisterIncentiveProposal}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kynno.incentives.v1.RegisterIncentiveProposal;
  return proto.kynno.incentives.v1.RegisterIncentiveProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kynno.incentives.v1.RegisterIncentiveProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kynno.incentives.v1.RegisterIncentiveProposal}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 4:
      var value = new cosmos_base_v1beta1_coin_pb.DecCoin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addAllocations(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEpochs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kynno.incentives.v1.RegisterIncentiveProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kynno.incentives.v1.RegisterIncentiveProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAllocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cosmos_base_v1beta1_coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getEpochs();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contract = 3;
 * @return {string}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.setContract = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin allocations = 4;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.getAllocationsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.DecCoin, 4));
};


/** @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.setAllocationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.addAllocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.clearAllocationsList = function() {
  this.setAllocationsList([]);
};


/**
 * optional uint32 epochs = 5;
 * @return {number}
 */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.getEpochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.kynno.incentives.v1.RegisterIncentiveProposal.prototype.setEpochs = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kynno.incentives.v1.CancelIncentiveProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kynno.incentives.v1.CancelIncentiveProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kynno.incentives.v1.CancelIncentiveProposal.displayName = 'proto.kynno.incentives.v1.CancelIncentiveProposal';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.kynno.incentives.v1.CancelIncentiveProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kynno.incentives.v1.CancelIncentiveProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contract: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kynno.incentives.v1.CancelIncentiveProposal}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kynno.incentives.v1.CancelIncentiveProposal;
  return proto.kynno.incentives.v1.CancelIncentiveProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kynno.incentives.v1.CancelIncentiveProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kynno.incentives.v1.CancelIncentiveProposal}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kynno.incentives.v1.CancelIncentiveProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kynno.incentives.v1.CancelIncentiveProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contract = 3;
 * @return {string}
 */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kynno.incentives.v1.CancelIncentiveProposal.prototype.setContract = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.kynno.incentives.v1);
