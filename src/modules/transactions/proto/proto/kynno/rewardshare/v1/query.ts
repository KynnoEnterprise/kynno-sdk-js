/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.6.1
 * source: kynno/rewardshare/v1/query.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../cosmos/base/query/v1beta1/pagination";
import * as dependency_2 from "./genesis";
import * as dependency_3 from "./rewardshare";
import * as dependency_4 from "./../../../google/api/annotations";
import * as dependency_5 from "./../../../gogoproto/gogo";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace kynno.rewardshare.v1 {
    export class QueryRewardsharesRequest extends pb_1.Message {
        constructor(data?: any[] | {
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 1) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryRewardsharesRequest({});
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.pagination !== undefined)
                writer.writeMessage(1, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryRewardsharesRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryRewardsharesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryRewardsharesRequest {
            return QueryRewardsharesRequest.deserialize(bytes);
        }
    }
    export class QueryRewardsharesResponse extends pb_1.Message {
        constructor(data?: any[] | {
            rewardshares?: dependency_3.kynno.rewardshare.v1.Rewardshare[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("rewardshares" in data && data.rewardshares != undefined) {
                    this.rewardshares = data.rewardshares;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get rewardshares() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.kynno.rewardshare.v1.Rewardshare, 1) as dependency_3.kynno.rewardshare.v1.Rewardshare[];
        }
        set rewardshares(value: dependency_3.kynno.rewardshare.v1.Rewardshare[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            rewardshares?: ReturnType<typeof dependency_3.kynno.rewardshare.v1.Rewardshare.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryRewardsharesResponse({});
            if (data.rewardshares != null) {
                message.rewardshares = data.rewardshares.map(item => dependency_3.kynno.rewardshare.v1.Rewardshare.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                rewardshares?: ReturnType<typeof dependency_3.kynno.rewardshare.v1.Rewardshare.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.rewardshares != null) {
                data.rewardshares = this.rewardshares.map((item: dependency_3.kynno.rewardshare.v1.Rewardshare) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.rewardshares !== undefined)
                writer.writeRepeatedMessage(1, this.rewardshares, (item: dependency_3.kynno.rewardshare.v1.Rewardshare) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryRewardsharesResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryRewardsharesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.rewardshares, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.kynno.rewardshare.v1.Rewardshare.deserialize(reader), dependency_3.kynno.rewardshare.v1.Rewardshare));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryRewardsharesResponse {
            return QueryRewardsharesResponse.deserialize(bytes);
        }
    }
    export class QueryRewardshareRequest extends pb_1.Message {
        constructor(data?: any[] | {
            contract_address?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("contract_address" in data && data.contract_address != undefined) {
                    this.contract_address = data.contract_address;
                }
            }
        }
        get contract_address() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set contract_address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            contract_address?: string;
        }) {
            const message = new QueryRewardshareRequest({});
            if (data.contract_address != null) {
                message.contract_address = data.contract_address;
            }
            return message;
        }
        toObject() {
            const data: {
                contract_address?: string;
            } = {};
            if (this.contract_address != null) {
                data.contract_address = this.contract_address;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.contract_address === "string" && this.contract_address.length)
                writer.writeString(1, this.contract_address);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryRewardshareRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryRewardshareRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.contract_address = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryRewardshareRequest {
            return QueryRewardshareRequest.deserialize(bytes);
        }
    }
    export class QueryRewardshareResponse extends pb_1.Message {
        constructor(data?: any[] | {
            rewardshare?: dependency_3.kynno.rewardshare.v1.Rewardshare;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("rewardshare" in data && data.rewardshare != undefined) {
                    this.rewardshare = data.rewardshare;
                }
            }
        }
        get rewardshare() {
            return pb_1.Message.getWrapperField(this, dependency_3.kynno.rewardshare.v1.Rewardshare, 1) as dependency_3.kynno.rewardshare.v1.Rewardshare;
        }
        set rewardshare(value: dependency_3.kynno.rewardshare.v1.Rewardshare) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            rewardshare?: ReturnType<typeof dependency_3.kynno.rewardshare.v1.Rewardshare.prototype.toObject>;
        }) {
            const message = new QueryRewardshareResponse({});
            if (data.rewardshare != null) {
                message.rewardshare = dependency_3.kynno.rewardshare.v1.Rewardshare.fromObject(data.rewardshare);
            }
            return message;
        }
        toObject() {
            const data: {
                rewardshare?: ReturnType<typeof dependency_3.kynno.rewardshare.v1.Rewardshare.prototype.toObject>;
            } = {};
            if (this.rewardshare != null) {
                data.rewardshare = this.rewardshare.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.rewardshare !== undefined)
                writer.writeMessage(1, this.rewardshare, () => this.rewardshare.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryRewardshareResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryRewardshareResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.rewardshare, () => message.rewardshare = dependency_3.kynno.rewardshare.v1.Rewardshare.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryRewardshareResponse {
            return QueryRewardshareResponse.deserialize(bytes);
        }
    }
    export class QueryParamsRequest extends pb_1.Message {
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}) {
            const message = new QueryParamsRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryParamsRequest {
            return QueryParamsRequest.deserialize(bytes);
        }
    }
    export class QueryParamsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            params?: dependency_2.kynno.rewardshare.v1.Params;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("params" in data && data.params != undefined) {
                    this.params = data.params;
                }
            }
        }
        get params() {
            return pb_1.Message.getWrapperField(this, dependency_2.kynno.rewardshare.v1.Params, 1) as dependency_2.kynno.rewardshare.v1.Params;
        }
        set params(value: dependency_2.kynno.rewardshare.v1.Params) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            params?: ReturnType<typeof dependency_2.kynno.rewardshare.v1.Params.prototype.toObject>;
        }) {
            const message = new QueryParamsResponse({});
            if (data.params != null) {
                message.params = dependency_2.kynno.rewardshare.v1.Params.fromObject(data.params);
            }
            return message;
        }
        toObject() {
            const data: {
                params?: ReturnType<typeof dependency_2.kynno.rewardshare.v1.Params.prototype.toObject>;
            } = {};
            if (this.params != null) {
                data.params = this.params.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.params !== undefined)
                writer.writeMessage(1, this.params, () => this.params.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.params, () => message.params = dependency_2.kynno.rewardshare.v1.Params.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryParamsResponse {
            return QueryParamsResponse.deserialize(bytes);
        }
    }
    export class QueryDeployerRewardsharesRequest extends pb_1.Message {
        constructor(data?: any[] | {
            deployer_address?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("deployer_address" in data && data.deployer_address != undefined) {
                    this.deployer_address = data.deployer_address;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get deployer_address() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set deployer_address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            deployer_address?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryDeployerRewardsharesRequest({});
            if (data.deployer_address != null) {
                message.deployer_address = data.deployer_address;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                deployer_address?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.deployer_address != null) {
                data.deployer_address = this.deployer_address;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.deployer_address === "string" && this.deployer_address.length)
                writer.writeString(1, this.deployer_address);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDeployerRewardsharesRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDeployerRewardsharesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.deployer_address = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDeployerRewardsharesRequest {
            return QueryDeployerRewardsharesRequest.deserialize(bytes);
        }
    }
    export class QueryDeployerRewardsharesResponse extends pb_1.Message {
        constructor(data?: any[] | {
            contract_addresses?: string[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("contract_addresses" in data && data.contract_addresses != undefined) {
                    this.contract_addresses = data.contract_addresses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get contract_addresses() {
            return pb_1.Message.getField(this, 1) as string[];
        }
        set contract_addresses(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            contract_addresses?: string[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryDeployerRewardsharesResponse({});
            if (data.contract_addresses != null) {
                message.contract_addresses = data.contract_addresses;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                contract_addresses?: string[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.contract_addresses != null) {
                data.contract_addresses = this.contract_addresses;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.contract_addresses !== undefined)
                writer.writeRepeatedString(1, this.contract_addresses);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDeployerRewardsharesResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDeployerRewardsharesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDeployerRewardsharesResponse {
            return QueryDeployerRewardsharesResponse.deserialize(bytes);
        }
    }
    export class QueryWithdrawerRewardsharesRequest extends pb_1.Message {
        constructor(data?: any[] | {
            withdrawer_address?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("withdrawer_address" in data && data.withdrawer_address != undefined) {
                    this.withdrawer_address = data.withdrawer_address;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get withdrawer_address() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set withdrawer_address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            withdrawer_address?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryWithdrawerRewardsharesRequest({});
            if (data.withdrawer_address != null) {
                message.withdrawer_address = data.withdrawer_address;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                withdrawer_address?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.withdrawer_address != null) {
                data.withdrawer_address = this.withdrawer_address;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.withdrawer_address === "string" && this.withdrawer_address.length)
                writer.writeString(1, this.withdrawer_address);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryWithdrawerRewardsharesRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryWithdrawerRewardsharesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.withdrawer_address = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryWithdrawerRewardsharesRequest {
            return QueryWithdrawerRewardsharesRequest.deserialize(bytes);
        }
    }
    export class QueryWithdrawerRewardsharesResponse extends pb_1.Message {
        constructor(data?: any[] | {
            contract_addresses?: string[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("contract_addresses" in data && data.contract_addresses != undefined) {
                    this.contract_addresses = data.contract_addresses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get contract_addresses() {
            return pb_1.Message.getField(this, 1) as string[];
        }
        set contract_addresses(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            contract_addresses?: string[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryWithdrawerRewardsharesResponse({});
            if (data.contract_addresses != null) {
                message.contract_addresses = data.contract_addresses;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                contract_addresses?: string[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.contract_addresses != null) {
                data.contract_addresses = this.contract_addresses;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.contract_addresses !== undefined)
                writer.writeRepeatedString(1, this.contract_addresses);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryWithdrawerRewardsharesResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryWithdrawerRewardsharesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryWithdrawerRewardsharesResponse {
            return QueryWithdrawerRewardsharesResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedQueryService {
        static definition = {
            Rewardshares: {
                path: "/kynno.rewardshare.v1.Query/Rewardshares",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryRewardsharesRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryRewardsharesRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryRewardsharesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryRewardsharesResponse.deserialize(new Uint8Array(bytes))
            },
            Rewardshare: {
                path: "/kynno.rewardshare.v1.Query/Rewardshare",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryRewardshareRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryRewardshareRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryRewardshareResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryRewardshareResponse.deserialize(new Uint8Array(bytes))
            },
            Params: {
                path: "/kynno.rewardshare.v1.Query/Params",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryParamsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryParamsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryParamsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryParamsResponse.deserialize(new Uint8Array(bytes))
            },
            DeployerRewardshares: {
                path: "/kynno.rewardshare.v1.Query/DeployerRewardshares",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryDeployerRewardsharesRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryDeployerRewardsharesRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryDeployerRewardsharesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryDeployerRewardsharesResponse.deserialize(new Uint8Array(bytes))
            },
            WithdrawerRewardshares: {
                path: "/kynno.rewardshare.v1.Query/WithdrawerRewardshares",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryWithdrawerRewardsharesRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryWithdrawerRewardsharesRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryWithdrawerRewardsharesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryWithdrawerRewardsharesResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Rewardshares(call: grpc_1.ServerUnaryCall<QueryRewardsharesRequest, QueryRewardsharesResponse>, callback: grpc_1.sendUnaryData<QueryRewardsharesResponse>): void;
        abstract Rewardshare(call: grpc_1.ServerUnaryCall<QueryRewardshareRequest, QueryRewardshareResponse>, callback: grpc_1.sendUnaryData<QueryRewardshareResponse>): void;
        abstract Params(call: grpc_1.ServerUnaryCall<QueryParamsRequest, QueryParamsResponse>, callback: grpc_1.sendUnaryData<QueryParamsResponse>): void;
        abstract DeployerRewardshares(call: grpc_1.ServerUnaryCall<QueryDeployerRewardsharesRequest, QueryDeployerRewardsharesResponse>, callback: grpc_1.sendUnaryData<QueryDeployerRewardsharesResponse>): void;
        abstract WithdrawerRewardshares(call: grpc_1.ServerUnaryCall<QueryWithdrawerRewardsharesRequest, QueryWithdrawerRewardsharesResponse>, callback: grpc_1.sendUnaryData<QueryWithdrawerRewardsharesResponse>): void;
    }
    export class QueryClient extends grpc_1.makeGenericClientConstructor(UnimplementedQueryService.definition, "Query", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        Rewardshares: GrpcUnaryServiceInterface<QueryRewardsharesRequest, QueryRewardsharesResponse> = (message: QueryRewardsharesRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryRewardsharesResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryRewardsharesResponse>, callback?: grpc_1.requestCallback<QueryRewardsharesResponse>): grpc_1.ClientUnaryCall => {
            return super.Rewardshares(message, metadata, options, callback);
        };
        Rewardshare: GrpcUnaryServiceInterface<QueryRewardshareRequest, QueryRewardshareResponse> = (message: QueryRewardshareRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryRewardshareResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryRewardshareResponse>, callback?: grpc_1.requestCallback<QueryRewardshareResponse>): grpc_1.ClientUnaryCall => {
            return super.Rewardshare(message, metadata, options, callback);
        };
        Params: GrpcUnaryServiceInterface<QueryParamsRequest, QueryParamsResponse> = (message: QueryParamsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryParamsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryParamsResponse>, callback?: grpc_1.requestCallback<QueryParamsResponse>): grpc_1.ClientUnaryCall => {
            return super.Params(message, metadata, options, callback);
        };
        DeployerRewardshares: GrpcUnaryServiceInterface<QueryDeployerRewardsharesRequest, QueryDeployerRewardsharesResponse> = (message: QueryDeployerRewardsharesRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryDeployerRewardsharesResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryDeployerRewardsharesResponse>, callback?: grpc_1.requestCallback<QueryDeployerRewardsharesResponse>): grpc_1.ClientUnaryCall => {
            return super.DeployerRewardshares(message, metadata, options, callback);
        };
        WithdrawerRewardshares: GrpcUnaryServiceInterface<QueryWithdrawerRewardsharesRequest, QueryWithdrawerRewardsharesResponse> = (message: QueryWithdrawerRewardsharesRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryWithdrawerRewardsharesResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryWithdrawerRewardsharesResponse>, callback?: grpc_1.requestCallback<QueryWithdrawerRewardsharesResponse>): grpc_1.ClientUnaryCall => {
            return super.WithdrawerRewardshares(message, metadata, options, callback);
        };
    }
}
